var VL={cache:{},loop:function(){let v;Object.keys(this).forEach(f=>{"task_"===f.toString().substring(0,5)&&(v=f.toString().split("task_")[1],this.variableHasChanged(v)&&(this.isObject(window[v])?this.cache[v]=JSON.stringify(window[v]):this.cache[v]=window[v],this[f]()))}),window.requestAnimationFrame(this.loop.bind(this))},isObject:function(v){return"object"==typeof v&&!Array.isArray(v)&&null!==v},jsonCompare:function(jsonString,object){return jsonString===JSON.stringify(object)},variableHasChanged:function(v){return this.isObject(window[v])?!this.jsonCompare(this.cache[v],window[v]):this.cache[v]!==window[v]},add:function(v,f){return v&&void 0!==window[v]?f?(this.isObject(window[v])?this.cache[v]=JSON.stringify(window[v]):this.cache[v]=window[v],this[`task_${v}`]=f,!0):(console.error("VL | Argument Error: You must pass a function."),!1):(console.error("VL | Scope Error: Variable must be globally declared with 'var'."),!1)},remove:function(v){return!!this.cache[v]&&(delete this[`task_${v}`],delete this.cache[v],!0)},start:function(){return window.requestAnimationFrame(this.loop.bind(this)),!0}};